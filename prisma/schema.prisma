// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String        @id @default(uuid())
  name           String?
  email          String?       @unique
  emailVerified  DateTime?
  image          String?
  accounts       Account[]
  sessions       Session[]
  promotions     Promotion[]   @relation("UserToPromotion")
  socialPosts    SocialPost[]  @relation("UserToSocialPost")
}

model Account {
  id                String  @id @default(uuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(uuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Promotion {
  id          String        @id @default(uuid())
  name        String
  description String?
  promoterId  String
  promoter    User          @relation("UserToPromotion", fields: [promoterId], references: [id])
  socialPosts SocialPost[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model SocialPost {
  id          String     @id @default(uuid())
  promotionId String
  promotion   Promotion  @relation(fields: [promotionId], references: [id])
  platform    String
  content     String
  status      String
  promoterId  String
  promoter    User       @relation("UserToSocialPost", fields: [promoterId], references: [id])
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
} 